<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guonl.dao.SqlLogRecordMapper">
  <resultMap id="BaseResultMap" type="com.guonl.po.SqlLogRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="table_name" jdbcType="VARCHAR" property="tableName" />
    <result column="execute_sql" jdbcType="VARCHAR" property="executeSql" />
    <result column="sql_para" jdbcType="VARCHAR" property="sqlPara" />
    <result column="sql_type" jdbcType="VARCHAR" property="sqlType" />
    <result column="operator_ip" jdbcType="VARCHAR" property="operatorIp" />
    <result column="operator_info" jdbcType="VARCHAR" property="operatorInfo" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="is_del" jdbcType="BIT" property="isDel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, table_name, execute_sql, sql_para, sql_type, operator_ip, operator_info, created_at, 
    updated_at, is_del
  </sql>
  <select id="selectByExample" parameterType="com.guonl.po.SqlLogRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sql_log_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sql_log_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sql_log_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.guonl.po.SqlLogRecordExample">
    delete from sql_log_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.guonl.po.SqlLogRecord">
    insert into sql_log_record (id, table_name, execute_sql, 
      sql_para, sql_type, operator_ip, 
      operator_info, created_at, updated_at, 
      is_del)
    values (#{id,jdbcType=INTEGER}, #{tableName,jdbcType=VARCHAR}, #{executeSql,jdbcType=VARCHAR}, 
      #{sqlPara,jdbcType=VARCHAR}, #{sqlType,jdbcType=VARCHAR}, #{operatorIp,jdbcType=VARCHAR}, 
      #{operatorInfo,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{isDel,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.guonl.po.SqlLogRecord">
    insert into sql_log_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tableName != null">
        table_name,
      </if>
      <if test="executeSql != null">
        execute_sql,
      </if>
      <if test="sqlPara != null">
        sql_para,
      </if>
      <if test="sqlType != null">
        sql_type,
      </if>
      <if test="operatorIp != null">
        operator_ip,
      </if>
      <if test="operatorInfo != null">
        operator_info,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tableName != null">
        #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="executeSql != null">
        #{executeSql,jdbcType=VARCHAR},
      </if>
      <if test="sqlPara != null">
        #{sqlPara,jdbcType=VARCHAR},
      </if>
      <if test="sqlType != null">
        #{sqlType,jdbcType=VARCHAR},
      </if>
      <if test="operatorIp != null">
        #{operatorIp,jdbcType=VARCHAR},
      </if>
      <if test="operatorInfo != null">
        #{operatorInfo,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.guonl.po.SqlLogRecordExample" resultType="java.lang.Long">
    select count(*) from sql_log_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sql_log_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tableName != null">
        table_name = #{record.tableName,jdbcType=VARCHAR},
      </if>
      <if test="record.executeSql != null">
        execute_sql = #{record.executeSql,jdbcType=VARCHAR},
      </if>
      <if test="record.sqlPara != null">
        sql_para = #{record.sqlPara,jdbcType=VARCHAR},
      </if>
      <if test="record.sqlType != null">
        sql_type = #{record.sqlType,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorIp != null">
        operator_ip = #{record.operatorIp,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorInfo != null">
        operator_info = #{record.operatorInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sql_log_record
    set id = #{record.id,jdbcType=INTEGER},
      table_name = #{record.tableName,jdbcType=VARCHAR},
      execute_sql = #{record.executeSql,jdbcType=VARCHAR},
      sql_para = #{record.sqlPara,jdbcType=VARCHAR},
      sql_type = #{record.sqlType,jdbcType=VARCHAR},
      operator_ip = #{record.operatorIp,jdbcType=VARCHAR},
      operator_info = #{record.operatorInfo,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      is_del = #{record.isDel,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.guonl.po.SqlLogRecord">
    update sql_log_record
    <set>
      <if test="tableName != null">
        table_name = #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="executeSql != null">
        execute_sql = #{executeSql,jdbcType=VARCHAR},
      </if>
      <if test="sqlPara != null">
        sql_para = #{sqlPara,jdbcType=VARCHAR},
      </if>
      <if test="sqlType != null">
        sql_type = #{sqlType,jdbcType=VARCHAR},
      </if>
      <if test="operatorIp != null">
        operator_ip = #{operatorIp,jdbcType=VARCHAR},
      </if>
      <if test="operatorInfo != null">
        operator_info = #{operatorInfo,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guonl.po.SqlLogRecord">
    update sql_log_record
    set table_name = #{tableName,jdbcType=VARCHAR},
      execute_sql = #{executeSql,jdbcType=VARCHAR},
      sql_para = #{sqlPara,jdbcType=VARCHAR},
      sql_type = #{sqlType,jdbcType=VARCHAR},
      operator_ip = #{operatorIp,jdbcType=VARCHAR},
      operator_info = #{operatorInfo,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      is_del = #{isDel,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.guonl.po.SqlLogRecordExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from sql_log_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into sql_log_record
    (id, table_name, execute_sql, sql_para, sql_type, operator_ip, operator_info, created_at, 
      updated_at, is_del)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.tableName,jdbcType=VARCHAR}, #{item.executeSql,jdbcType=VARCHAR}, 
        #{item.sqlPara,jdbcType=VARCHAR}, #{item.sqlType,jdbcType=VARCHAR}, #{item.operatorIp,jdbcType=VARCHAR}, 
        #{item.operatorInfo,jdbcType=VARCHAR}, #{item.createdAt,jdbcType=TIMESTAMP}, #{item.updatedAt,jdbcType=TIMESTAMP}, 
        #{item.isDel,jdbcType=BIT})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into sql_log_record (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id' == column.value">
          #{item.id,jdbcType=INTEGER}
        </if>
        <if test="'table_name' == column.value">
          #{item.tableName,jdbcType=VARCHAR}
        </if>
        <if test="'execute_sql' == column.value">
          #{item.executeSql,jdbcType=VARCHAR}
        </if>
        <if test="'sql_para' == column.value">
          #{item.sqlPara,jdbcType=VARCHAR}
        </if>
        <if test="'sql_type' == column.value">
          #{item.sqlType,jdbcType=VARCHAR}
        </if>
        <if test="'operator_ip' == column.value">
          #{item.operatorIp,jdbcType=VARCHAR}
        </if>
        <if test="'operator_info' == column.value">
          #{item.operatorInfo,jdbcType=VARCHAR}
        </if>
        <if test="'created_at' == column.value">
          #{item.createdAt,jdbcType=TIMESTAMP}
        </if>
        <if test="'updated_at' == column.value">
          #{item.updatedAt,jdbcType=TIMESTAMP}
        </if>
        <if test="'is_del' == column.value">
          #{item.isDel,jdbcType=BIT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>